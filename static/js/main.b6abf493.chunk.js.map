{"version":3,"sources":["reducers/listsReducer.js","reducers/index.js","components/ListItem/ListItem.jsx","util/apiCalls.js","containers/ListCard/ListCard.jsx","actions/index.js","containers/ListArea/ListArea.jsx","components/HomeScreen/HomeScreen.jsx","containers/ListInput/ListInput.jsx","components/App/App.jsx","index.js"],"names":["initialState","rootReducer","combineReducers","lists","state","arguments","length","undefined","action","type","payload","concat","Object","toConsumableArray","list","newState","index","findIndex","id","splice","filter","ListItem","props","userTask","complete","react_default","a","createElement","className","getAllLists","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","process","sent","ok","Error","json","abrupt","stop","apply","this","addNewList","_ref2","_callee2","_context2","method","headers","Content-Type","body","JSON","stringify","_x","getListData","_ref3","_callee3","_context3","_x2","deleteList","_ref4","_callee4","_context4","_x3","updateList","_ref5","_callee5","_context5","_x4","ListCard","_Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","error","apiCalls","t0","setState","inherits","createClass","key","value","_this$props","title","notes","incompleteNotes","n","map","note","components_ListItem_ListItem","assign","completeNotes","class","onClick","react_router_dom","to","Component","connect","dispatch","actions","ListArea","getExistingLists","addAllLists","displayLists","containers_ListCard_ListCard","HomeScreen","containers_ListArea_ListArea","ListInput","isActive","main","getExistingInfo","message","handleChange","e","_e$target","target","name","defineProperty","handleKeyPress","saveNote","_this$state","newNote","Date","now","handleSave","_this$state2","listToUpdate","listData","find","parseInt","createNewList","history","push","addList","deleteNote","modifyNote","returnHome","classList","contains","_this2","_this$state3","onChange","autoComplete","placeholder","onFocus","onBlur","onKeyPress","disabled","role","App","react_router","path","component","render","containers_ListInput_ListInput","match","params","store","createStore","composeWithDevTools","app","es","components_App_App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b6abf493.chunk.js","sourcesContent":["const initialState = [];\n\nexport const listsReducer = (state = initialState, action) => {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase 'ADD_ALL_LISTS':\n\t\t\treturn payload.lists;\n\t\tcase 'ADD_LIST':\n\t\t\treturn [...state, payload.list];\n\t\tcase 'UPDATE_LIST':\n\t\t\tconst newState = [...state];\n\t\t\tconst index = newState.findIndex(list => list.id === payload.list.id);\n\t\t\tnewState.splice(index, 1, payload.list);\n\t\t\treturn newState;\n\t\tcase 'DELETE_LIST':\n\t\t\treturn state.filter(list => list.id !== payload.id);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport { listsReducer } from './listsReducer';\n\nexport const rootReducer = combineReducers({\n\tlists: listsReducer\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ListItem.scss\";\n\nconst ListItem = props => {\n  const { userTask, complete } = props;\n  if (complete) {\n    return (\n      <li className=\"ListItem completedTask\">\n        <i className=\"material-icons checked\">check</i>\n        <p>{userTask}</p>\n      </li>\n    );\n  } else {\n    return (\n      <li className=\"ListItem activeTask\">\n        <i className=\"material-icons\">crop_square</i>\n        <p>{userTask}</p>\n      </li>\n    );\n  }\n};\n\nListItem.propTypes = {\n  complete: PropTypes.bool,\n  id: PropTypes.number,\n  userTask: PropTypes.string\n};\n\nexport default ListItem;\n","export const getAllLists = async () => {\n\tconst res = await fetch(`${process.env.REACT_APP_BASE_URL}/api/v1/lists`);\n\tif (!res.ok) {\n\t\tthrow new Error('Could not get existing lists');\n\t}\n\treturn await res.json();\n};\n\nexport const addNewList = async list => {\n\tconst res = await fetch(`${process.env.REACT_APP_BASE_URL}/api/v1/lists`, {\n\t\tmethod: 'POST',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify(list)\n\t});\n\tif (!res.ok) {\n\t\tthrow new Error('Could not add new list');\n\t\t// throw new Error(res.statusText);\n\t}\n\treturn await res.json();\n};\n\nexport const getListData = async id => {\n\tconst res = await fetch(`${process.env.REACT_APP_BASE_URL}/api/v1/lists/${id}`);\n\tif (!res.ok) {\n\t\tthrow new Error('Could not fetch list with that id');\n\t}\n\treturn await res.json();\n};\n\nexport const deleteList = async id => {\n\tconst res = await fetch(`${process.env.REACT_APP_BASE_URL}/api/v1/lists/${id}`, {\n\t\tmethod: 'DELETE'\n\t});\n\tif (!res.ok) {\n\t\tthrow new Error('Could not delete card');\n\t}\n};\n\nexport const updateList = async list => {\n\tconst res = await fetch(`${process.env.REACT_APP_BASE_URL}/api/v1/lists/${list.id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify(list)\n\t});\n\tif (!res.ok) {\n\t\tthrow new Error('Could not update list');\n\t}\n};\n","import React, { Component } from \"react\";\nimport ListItem from \"../../components/ListItem/ListItem\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport * as apiCalls from \"../../util/apiCalls\";\n\nimport \"./ListCard.scss\";\n\nexport class ListCard extends Component {\n  state = {\n    error: null\n  };\n\n  deleteList = async () => {\n    try {\n      await apiCalls.deleteList(this.props.id);\n      this.props.deleteList(this.props.id);\n    } catch (error) {\n      this.setState({ error });\n    }\n  };\n\n  render() {\n    const { title, notes } = this.props;\n\n    const incompleteNotes = notes\n      .filter(n => !n.complete)\n      .map(note => <ListItem key={note.id} {...note} complete={false} />);\n    const completeNotes = notes\n      .filter(n => n.complete)\n      .map(note => <ListItem key={note.id} {...note} complete={true} />);\n\n    return (\n      <article className=\"ListCard\">\n        <h3>{title}</h3>\n        <ul>{incompleteNotes}</ul>\n        <ul>{completeNotes}</ul>\n        <div className=\"btn-container\">\n          <i class=\"material-icons btn\" onClick={this.deleteList}>\n            delete_forever\n          </i>\n          <Link to={`/notes/${this.props.id}`} key={this.props.id}>\n            <i class=\"material-icons btn \">create</i>\n          </Link>\n        </div>\n      </article>\n    );\n  }\n}\n\nListCard.propTypes = {\n  deleteList: PropTypes.func,\n  id: PropTypes.number,\n  notes: PropTypes.array,\n  title: PropTypes.string\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  deleteList: id => dispatch(actions.deleteList(id))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ListCard);\n","export const addList = list => {\n\treturn {\n\t\ttype: 'ADD_LIST',\n\t\tpayload: { list }\n\t};\n};\n\nexport const updateList = list => {\n\treturn {\n\t\ttype: 'UPDATE_LIST',\n\t\tpayload: { list }\n\t};\n};\n\nexport const deleteList = id => {\n\treturn {\n\t\ttype: 'DELETE_LIST',\n\t\tpayload: { id }\n\t};\n};\n\nexport const addAllLists = lists => {\n\treturn {\n\t\ttype: 'ADD_ALL_LISTS',\n\t\tpayload: { lists }\n\t};\n};\n","import React, { Component } from \"react\";\nimport ListCard from \"../ListCard/ListCard\";\nimport PropTypes from \"prop-types\";\nimport * as apiCalls from \"../../util/apiCalls\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport \"./ListArea.scss\";\n\nexport class ListArea extends Component {\n  componentDidMount() {\n    this.getExistingLists();\n  }\n\n  getExistingLists = async () => {\n    const lists = await apiCalls.getAllLists();\n    this.props.addAllLists(lists);\n  };\n\n  render() {\n    const { lists } = this.props;\n    const displayLists = lists.map(list => {\n      return <ListCard {...list} key={list.id} />;\n    });\n    return <output className=\"ListArea\">{displayLists}</output>;\n  }\n}\n\nListArea.propTypes = {\n  addAllLists: PropTypes.func,\n  lists: PropTypes.array\n};\n\nexport const mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  addAllLists: lists => dispatch(actions.addAllLists(lists))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListArea);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListArea from \"../../containers/ListArea/ListArea\";\nimport \"./HomeScreen.scss\";\n\nconst HomeScreen = () => {\n  return (\n    <section className=\"HomeScreen\">\n      <header>\n        <h1>\n          Trapper<span>KEEPER</span>\n        </h1>\n        <Link to=\"/new-note\">\n          <button>Add New List</button>\n        </Link>\n      </header>\n      <ListArea />\n    </section>\n  );\n};\n\nexport default HomeScreen;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport * as apiCalls from \"../../util/apiCalls\";\nimport \"./ListInput.scss\";\n\nexport class ListInput extends Component {\n\tstate = {\n\t\tisActive: false,\n\t\tmain: '',\n\t\ttitle: '',\n\t\tnotes: [],\n\t\terror: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getExistingInfo();\n\t}\n\n\tgetExistingInfo = async () => {\n\t\tconst { id } = this.props;\n\t\tif (id) {\n\t\t\ttry {\n\t\t\t\tconst list = await apiCalls.getListData(id);\n\t\t\t\tconst { title, notes } = list;\n\t\t\t\tthis.setState({ title, notes, error: '' });\n\t\t\t} catch (error) {\n\t\t\t\tthis.setState({ error: error.message });\n\t\t\t}\n\t\t}\n\t};\n\n\thandleChange = e => {\n\t\tconst { name, value } = e.target;\n\t\tthis.setState({ [name]: value });\n\t};\n\n\thandleKeyPress = e => {\n\t\tif (e.key === 'Enter') {\n\t\t\tthis.saveNote();\n\t\t}\n\t};\n\n\tsaveNote = () => {\n\t\tconst { main, notes } = this.state;\n\t\tif (main) {\n\t\t\tconst newNote = { id: Date.now(), userTask: main, complete: false };\n\t\t\tthis.setState({ notes: [...notes, newNote], main: '', isActive: false });\n\t\t}\n\t};\n\n\thandleSave = async () => {\n\t\tconst { lists, id } = this.props;\n\t\tconst { title, notes } = this.state;\n\t\tconst existing = lists.find(list => list.id === parseInt(id));\n\t\tif (existing) {\n\t\t\tconst listToUpdate = { id: parseInt(id), title, notes };\n\t\t\tawait this.updateList(listToUpdate);\n\t\t} else {\n\t\t\tconst listData = { title: title || 'Untitled List', notes };\n\t\t\tawait this.createNewList(listData);\n\t\t}\n\t\tthis.props.history.push('/');\n\t};\n\n\tcreateNewList = async listData => {\n\t\ttry {\n\t\t\tconst list = await apiCalls.addNewList(listData);\n\t\t\tthis.props.addList(list);\n\t\t\tthis.setState({ title: '', main: '', notes: [], error: '' });\n\t\t} catch (error) {\n\t\t\tthis.setState({ error: error.message });\n\t\t}\n\t};\n\n\tupdateList = async list => {\n\t\ttry {\n\t\t\tawait apiCalls.updateList(list);\n\t\t\tthis.props.updateList(list);\n\t\t} catch (error) {\n\t\t\tthis.setState({ error });\n\t\t}\n\t};\n\n\t// TODO refactor to modifyNote\n\tdeleteNote = id => {\n\t\treturn () => {\n\t\t\tconst notes = this.state.notes.filter(note => note.id !== id);\n\t\t\tthis.setState({ notes });\n\t\t};\n\t};\n\n\tmodifyNote = (method, id) => {\n\t\tconst { notes } = this.state;\n\t\tconst note = notes.find(n => n.id === id);\n\t\treturn e => {\n\t\t\tif (method === 'toggle') {\n\t\t\t\tnote.complete = !note.complete;\n\t\t\t} else if (method === 'update') {\n\t\t\t\tnote.userTask = e.target.value;\n\t\t\t}\n\t\t\tthis.setState({ notes });\n\t\t};\n\t};\n\n\treturnHome = e => {\n\t\tconst { classList } = e.target;\n\t\tclassList.contains('modal') && this.props.history.push('/');\n\t};\n\n\trender() {\n\t\tconst { title, isActive, main, notes } = this.state;\n\t\tconst incompleteNotes = notes.filter(n => !n.complete).map(note => {\n\t\t\treturn (\n\t\t\t\t<div key={note.id} className=\"existing-note\">\n\t\t\t\t\t<i className=\"material-icons toggle-icon\" onClick={this.modifyNote('toggle', note.id)}>\n\t\t\t\t\t\tcrop_square\n\t\t\t\t\t</i>\n\t\t\t\t\t<input className=\"existing-note-input\" value={note.userTask} onChange={this.modifyNote('update', note.id)} />\n\t\t\t\t\t<i className=\"material-icons delete-icon\" onClick={this.deleteNote(note.id)}>\n\t\t\t\t\t\tclose\n\t\t\t\t\t</i>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\tconst completeNotes = notes.filter(n => n.complete).map(note => {\n\t\t\treturn (\n\t\t\t\t<div key={note.id} className=\"existing-note\">\n\t\t\t\t\t<i className=\"material-icons toggle-icon\" onClick={this.modifyNote('toggle', note.id)}>\n\t\t\t\t\t\tcheck\n\t\t\t\t\t</i>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"existing-note-input complete\"\n\t\t\t\t\t\tvalue={note.userTask}\n\t\t\t\t\t\tonChange={this.modifyNote('update', note.id)}\n\t\t\t\t\t/>\n\t\t\t\t\t<i className=\"material-icons delete-icon\" onClick={this.deleteNote(note.id)}>\n\t\t\t\t\t\tclose\n\t\t\t\t\t</i>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"modal\" onClick={this.returnHome}>\n\t\t\t\t<form className=\"ListInput\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tplaceholder=\"Title\"\n\t\t\t\t\t\tclassName=\"input-title\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{incompleteNotes}\n\t\t\t\t\t{completeNotes.length > 0 && <div className=\"complete-notes\">{completeNotes}</div>}\n\t\t\t\t\t<div className={`list-items ${isActive && 'active'}`}>\n\t\t\t\t\t\t<i className=\"material-icons\">crop_square</i>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input-list-item\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"main\"\n\t\t\t\t\t\t\tvalue={main}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tplaceholder=\"New Item\"\n\t\t\t\t\t\t\tonFocus={() => this.setState({ isActive: true })}\n\t\t\t\t\t\t\tonBlur={this.saveNote}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{main.length > 0 ? (\n\t\t\t\t\t\t\t<i className=\"material-icons\" onClick={() => this.setState({ main: '' })}>\n\t\t\t\t\t\t\t\tclose\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<i disabled={true} className=\"material-icons hidden\">\n\t\t\t\t\t\t\t\tclose\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"btn-container\">\n\t\t\t\t\t\t<div role=\"button\" className=\"btn\" onClick={this.handleSave}>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nListInput.propTypes = {\n  addList: PropTypes.func,\n  updateList: PropTypes.func,\n  list: PropTypes.array\n};\n\nexport const mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  addList: list => dispatch(actions.addList(list)),\n  updateList: list => dispatch(actions.updateList(list))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListInput);\n","import React from 'react';\nimport './App.scss';\nimport HomeScreen from '../HomeScreen/HomeScreen';\nimport ListInput from '../../containers/ListInput/ListInput';\n\nimport { Route } from 'react-router-dom';\n\nconst App = () => {\n\treturn (\n\t\t<main className=\"App\">\n\t\t\t<Route path=\"/\" component={HomeScreen} />\n\t\t\t<Route path=\"/new-note\" render={({ history }) => <ListInput history={history} />} />\n\t\t\t<Route\n\t\t\t\tpath=\"/notes/:id\"\n\t\t\t\trender={({ match, history }) => <ListInput history={history} id={match.params.id} />}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './reducers';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport 'normalize.css';\nimport './index.scss';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nconst app = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}